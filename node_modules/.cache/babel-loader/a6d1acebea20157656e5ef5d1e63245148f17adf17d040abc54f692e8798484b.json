{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AHMAD\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authAction } from '../../store/auth';\nimport classes from './AuthForm.module.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoding, setIsLoding] = useState(false);\n  const dispatch = useDispatch();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const authHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoding(true);\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBSrVcbFFY5pAuN1s0ouA6h_Tx3J3UnvgQ';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBSrVcbFFY5pAuN1s0ouA6h_Tx3J3UnvgQ';\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoding(false);\n      if (res.ok) {\n        toast(\"done\");\n        return res.json();\n      } else {\n        res.json().then(data => {\n          console.log(data.error.message);\n          let errorMassage = \"Connection Failed\";\n          if (data.error.message) {\n            errorMassage = data.error.message;\n          }\n          toast(errorMassage);\n          throw new Error(errorMassage);\n        });\n      }\n    }).then(data => {\n      dispatch(authAction.login(idToken));\n      console.log(data);\n    }).catch(() => {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: authHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoding && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [isLogin ? 'Login' : 'Create Account', /*#__PURE__*/_jsxDEV(ToastContainer, {\n            position: \"top-center\",\n            autoClose: 1500,\n            hideProgressBar: false,\n            newestOnTop: false,\n            closeOnClick: false,\n            rtl: true,\n            pauseOnFocusLoss: true,\n            draggable: true,\n            pauseOnHover: true,\n            theme: \"colored\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), isLoding && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"loding..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"bzMjql/mkc6l3kl8TQEY6XDb5lw=\", false, function () {\n  return [useDispatch];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useDispatch","authAction","classes","ToastContainer","toast","AuthForm","isLogin","setIsLogin","isLoding","setIsLoding","dispatch","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","authHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","error","message","errorMassage","Error","login","idToken","catch","auth","control","actions","toggle"],"sources":["C:/Users/AHMAD/Desktop/01-starting-project/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authAction } from '../../store/auth'; \n\nimport classes from './AuthForm.module.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoding, setIsLoding] = useState(false);\n\n  const dispatch = useDispatch();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const authHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoding(true);\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBSrVcbFFY5pAuN1s0ouA6h_Tx3J3UnvgQ';\n\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBSrVcbFFY5pAuN1s0ouA6h_Tx3J3UnvgQ';\n\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    ).then((res) => {\n      setIsLoding(false);\n      if (res.ok) {\n        toast(\"done\");\n        \n        return (\n          res.json()\n          \n        );\n      } else {\n        res.json().then((data) => {\n          console.log(data.error.message);\n          let errorMassage = \"Connection Failed\";\n          if (data.error.message) {\n            errorMassage = data.error.message;\n          }\n          toast(errorMassage);\n          throw new Error(errorMassage);\n        });\n      }\n    }).then((data) => {\n      dispatch(authAction.login(idToken));\n      console.log(data);\n    }).catch(() => { });\n  };\n\n  return (\n    <section className={classes.auth}>\n\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={authHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoding && <button>{isLogin ? 'Login' : 'Create Account'}\n            <ToastContainer\n              position=\"top-center\"\n              autoClose={1500}\n              hideProgressBar={false}\n              newestOnTop={false}\n              closeOnClick={false}\n              rtl\n              pauseOnFocusLoss\n              draggable\n              pauseOnHover\n              theme=\"colored\"\n            />\n          </button>}\n          {isLoding && <p>loding..</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}